# NumPy Arrays:

 1. Array Creation
- array(): Creates an array from a list or other array-like object.
- asarray(): Converts input to an array without copying if already an array.
- copy(): Creates a copy of an array.
- empty(): Creates an uninitialized array of a given shape.
- zeros(): Creates an array filled with zeros.
- ones(): Creates an array filled with ones.
- full(): Creates an array filled with a specified value.
- arange(): Generates values within a range at specified intervals.
- linspace(): Generates evenly spaced values between two limits.
- logspace(): Generates logarithmically spaced values.
- random.rand(): Generates random numbers between 0 and 1.
- random.randint(): Generates random integers within a specified range.
- meshgrid(): Creates coordinate matrices from coordinate vectors.

---

 2. Array Manipulation
- reshape(): Reshapes an array without changing its data.
- ravel(): Flattens an array into a 1D array.
- flatten(): Returns a flattened copy of an array.
- resize(): Resizes an array to a new shape.
- expand_dims(): Adds a new dimension to an array.
- squeeze(): Removes single-dimensional entries.
- transpose(): Reverses or permutes array dimensions.
- swapaxes(): Swaps two specified axes.
- concatenate(): Joins arrays along a specified axis.
- split(): Splits an array into multiple sub-arrays.

---

 3. Mathematical Functions
- add(): Adds corresponding elements of arrays.
- subtract(): Subtracts one array from another.
- multiply(): Multiplies elements of arrays.
- divide(): Divides one array by another element-wise.
- sin(): Computes the sine of each element.
- cos(): Computes the cosine of each element.
- exp(): Computes the exponential of each element.
- log(): Computes the natural logarithm of each element.
- sqrt(): Computes the square root of each element.
- round_(): Rounds elements to the nearest integer.

---

 4. Linear Algebra
- dot(): Computes the dot product of two arrays.
- matmul(): Performs matrix multiplication.
- linalg.inv(): Computes the inverse of a matrix.
- linalg.det(): Computes the determinant of a matrix.
- linalg.eig(): Computes eigenvalues and eigenvectors.
- linalg.solve(): Solves linear equations.

---

 5. Statistics and Probability
- mean(): Computes the average of array elements.
- median(): Finds the median value.
- std(): Computes the standard deviation.
- var(): Computes the variance.
- sum(): Adds all elements in an array.
- amin(): Finds the minimum value.
- amax(): Finds the maximum value.
- percentile(): Computes the nth percentile of data.

---

 6. Indexing and Iterating
- where(): Returns indices of elements meeting a condition.
- nonzero(): Returns indices of non-zero elements.
- argmax(): Returns the index of the maximum element.
- argmin(): Returns the index of the minimum element.
- argsort(): Returns indices for sorting an array.

---

 7. I/O and Interfacing
- load(): Loads arrays from binary files.
- save(): Saves arrays to binary files.
- loadtxt(): Loads data from text files.
- savetxt(): Saves data to text files.

---

 8. Random Sampling
- random.rand(): Generates random floats between 0 and 1.
- random.randint(): Generates random integers within a range.
- random.normal(): Draws random samples from a normal distribution.
- random.uniform(): Draws random samples from a uniform distribution.

---

 9. Logical Functions
- logical_and(): Returns the logical AND of two arrays.
- logical_or(): Returns the logical OR of two arrays.
- logical_not(): Inverts the truth value of an array.
- greater(): Checks if elements of one array are greater than another.

---

 10. Special Functions
- polyfit(): Fits a polynomial to data.
- fft.fft(): Computes the Fast Fourier Transform.
- fft.ifft(): Computes the inverse FFT.

---

 11. Utilities
- size(): Returns the total number of elements.
- shape(): Returns the dimensions of the array.
- ndim(): Returns the number of dimensions.
- dtype(): Returns the data type of the array.

